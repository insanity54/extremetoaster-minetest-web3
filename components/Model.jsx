// // /*
// // Auto-generated by: https://github.com/pmndrs/gltfjsx
// // */

// // import React, { useRef, useMemo, useContext, createContext } from "react";
// // import { useGLTF, Merged } from "@react-three/drei";

// // const context = createContext();
// // export function Instances({ children, ...props }) {
// //   const { nodes } = useGLTF("/character.glb");
// //   const instances = useMemo(
// //     () => ({
// //       Player: nodes.Player,
// //     }),
// //     [nodes]
// //   );
// //   return (
// //     <Merged meshes={instances} {...props}>
// //       {(instances) => (
// //         <context.Provider value={instances} children={children} />
// //       )}
// //     </Merged>
// //   );
// // }

// // export function Model(props) {
// //   const instances = useContext(context);
// //   return (
// //     <group {...props} dispose={null}>
// //       <primitive object={nodes.Body} />
// //       <instances.Player />
// //     </group>
// //   );
// // }

// // useGLTF.preload("/character.glb");




// Auto-generated by: https://github.com/pmndrs/gltfjsx


import React, { useRef, useMemo } from 'react'
import { useTexture, useGLTF } from '@react-three/drei'
import * as THREE from 'three'

export function Model(props) {
  const texture = useTexture(props.texture) 
  texture.magFilter = THREE.NearestFilter;
  const group = useRef()
  const { nodes, materials } = useGLTF('/character.glb')
  const mappedMaterial = Object.assign(materials.Character, { map: texture })
  console.log(mappedMaterial.map.source)
  return (
    <group 
      ref={group} 
      {...props} 
      dispose={null} 
    >
      <group name="Scene">
        <group name="Armature" >
          <primitive position={[0, -2, 0]} object={nodes.Body} />
          <skinnedMesh 
            name="Player" 
            geometry={nodes.Player.geometry} 
            material={materials.Character} 
            skeleton={nodes.Player.skeleton} 
          />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/character.glb')



// /*
// Auto-generated by: https://github.com/pmndrs/gltfjsx
// */

// import React, { useRef, useMemo, useContext, createContext } from "react";
// import { useGLTF, Merged } from "@react-three/drei";

// const context = createContext();
// export function Instances({ children, ...props }) {
//   const { nodes } = useGLTF("/character.glb");
//   const instances = useMemo(
//     () => ({
//       Player: nodes.Player,
//     }),
//     [nodes]
//   );
//   return (
//     <Merged meshes={instances} {...props}>
//       {(instances) => (
//         <context.Provider value={instances} children={children} />
//       )}
//     </Merged>
//   );
// }

// export function Model(props) {
//   const instances = useContext(context);
//   return (
//     <group {...props} dispose={null}>
//       <instances.Player />
//     </group>
//   );
// }

// useGLTF.preload("/character.glb");